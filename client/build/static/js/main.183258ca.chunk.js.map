{"version":3,"sources":["utils/API.js","pages/homePage.js","components/Search/index.js","components/Navbar/index.js","components/PostQuestion/index.js","components/PostAnswer/index.js","components/DisplaySingleQuestion/index.js","App.js","index.js"],"names":["question","axios","post","get","put","id","answer","Home","props","useState","setQuestions","filteredQuestions","setFilteredQuestions","answers","setAnswers","useEffect","displayAll","displayAllAnswers","API","then","res","data","catch","err","console","log","response","className","filter","title","toLowerCase","includes","search","body","map","Card","Body","key","to","likes","questionId","length","views","moment","createdAt","fromNow","src","width","SearchBar","Form","FormControl","placeholder","onChange","e","setSearch","target","value","NavBar","height","Search","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Button","variant","withRouter","formObject","setFormObject","shouldSave","setShouldSave","addItemToDb","handleInputChange","name","history","replace","error","Group","controlId","Label","Text","Control","as","rows","onClick","preventDefault","dislikes","Answer","defaultInput","addAnswerToDb","Question","setQuestion","location","useLocation","questionID","pathname","split","findQuestionData","getContent","content","codeIndices","getIndicesOf","i","push","substring","text","generateBody","linkIndices","links","match","forEach","link","indexOf","linkIndex","j","firstText","firstLink","href","rel","secondText","searchStr","str","searchStrLen","index","startIndex","showAnswers","updateQuestion","questionDataCopy","updateAnswerLikesCount","answersDataCopy","find","newAnswers","PostAnswer","App","Navbar","exact","path","DisplaySingleQuestion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.183258ca.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  saveQuestionToDb: (question) => {\r\n    return axios.post(\"/api/questions\", question);\r\n  },\r\n\r\n  displayAllQuestions: () => {\r\n    return axios.get(\"/api/questions\");\r\n  },\r\n\r\n  updateQuestion: (question) => {\r\n    return axios.put(\"/api/questions/\" + question.id, question);\r\n  },\r\n\r\n  updateAnswerLikesQty: (answer) => {\r\n    return axios.put(\"/api/answers/\" + answer.id, answer);\r\n  },\r\n\r\n  postAnswer: (answer) => {\r\n    return axios.post(\"/api/answers\", answer);\r\n  },\r\n\r\n  getAllAnswers: () => {\r\n    return axios.get(\"/api/answers\");\r\n  },\r\n\r\n  findQuestion: (id) => {\r\n    return axios.get(\"/api/questions/\" + id);\r\n  },\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./style.css\";\r\nimport * as moment from \"moment\";\r\n\r\nconst Home = (props) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    displayAll();\r\n    displayAllAnswers();\r\n  }, []);\r\n\r\n  const displayAll = () => {\r\n    API.displayAllQuestions()\r\n      .then((res) => {\r\n        setQuestions(res.data);\r\n        setFilteredQuestions(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const displayAllAnswers = () => {\r\n    API.getAllAnswers()\r\n      .then((res) => {\r\n        setAnswers(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const getAnswersSum = (questionId) => {\r\n    return answers.filter((answer) => answer.questionId === questionId).length;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8  col-sm-12\">\r\n            <br></br> <br></br>\r\n            {filteredQuestions\r\n              .filter(\r\n                (question) =>\r\n                  question.title\r\n                    .toLowerCase()\r\n                    .includes(props.search.toLowerCase()) ||\r\n                  question.body\r\n                    .toLowerCase()\r\n                    .includes(props.search.toLowerCase())\r\n              )\r\n              .map((question) => (\r\n                <Card.Body key={question.id}>\r\n                  <div className=\"row\">\r\n                    <Link\r\n                      to={\"/display-single-question/\" + question.id}\r\n                      className=\"col-md-12 col-sm-12 question\"\r\n                    >\r\n                      {question.title}\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-2 col-sm-12 count\">\r\n                      likes: {question.likes}\r\n                    </div>\r\n                    <div className=\"col-md-2 col-sm-12 count\">\r\n                      answers: {getAnswersSum(question.id)}\r\n                    </div>\r\n                    <div className=\"col-md-2 col-sm-12 count\">\r\n                      views: {question.views}\r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-12 asked count\">\r\n                      asked: {moment(question.createdAt).fromNow()}\r\n                    </div>\r\n                  </div>\r\n                  <hr></hr>\r\n                </Card.Body>\r\n              ))}\r\n          </div>\r\n          <div className=\"col-md-2  col-sm-12\">\r\n            <br></br>\r\n\r\n            <img src=\"./images/ducki.jpg\" width=\"300px\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nconst SearchBar = (props) => {\r\n  const handleInputChange = (e) => {\r\n    props.setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <FormControl\r\n        className=\"search\"\r\n        placeholder=\"Search\"\r\n        onChange={handleInputChange}\r\n      ></FormControl>\r\n    </Form>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { IoIosMenu } from \"react-icons/io\";\r\nimport Search from \"../Search\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst NavBar = (props) => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg nav1\">\r\n        <div className=\"brand\">Rubber Duck</div>\r\n        <img src=\"/images/duck.jpg\" height=\"50px\" />\r\n        <Search setSearch={props.setSearch} />\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"menu\">\r\n            <IoIosMenu />\r\n          </span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n            <li>\r\n              <Link to=\"/post-question\">\r\n                <Button variant=\"outline-info\" className=\"ask-question\">\r\n                  Ask question\r\n                </Button>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                <Button variant=\"link\" className=\"home\">\r\n                  Home\r\n                </Button>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst PostQuestion = (props) => {\r\n  const [formObject, setFormObject] = useState([]);\r\n  const [shouldSave, setShouldSave] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (shouldSave === true) {\r\n      addItemToDb();\r\n    }\r\n  }, [shouldSave]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormObject({ ...formObject, [name]: value });\r\n  };\r\n\r\n  const addItemToDb = () => {\r\n    API.saveQuestionToDb(formObject)\r\n      .then((res) => {\r\n        console.log(res);\r\n        props.history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFormObject({ ...formObject, likes: 0, dislikes: 0, views: 0 });\r\n    setShouldSave(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 offset-sm-2 col-sm-12\">\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <Card className=\"card\">\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"title\">Title</Form.Label>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Be specific, so people can understand the issue you're\r\n                    having\r\n                  </Form.Text>\r\n                  <Form.Control name=\"title\" onChange={handleInputChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label className=\"title\">Body</Form.Label>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Include all the information someone would need to answer\r\n                    your question. To add code blocks, wrap your code in 3\r\n                    backticks like following example : ```location.pathname```\r\n                  </Form.Text>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows=\"7\"\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                className=\"post-question\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Post Question\r\n              </Button>\r\n            </Card>\r\n            <br></br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(PostQuestion);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst Answer = (props) => {\r\n  const defaultInput = { body: \"\" };\r\n  const [formObject, setFormObject] = useState(defaultInput);\r\n  const [shouldSave, setShouldSave] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (shouldSave === true) {\r\n      addAnswerToDb();\r\n      setShouldSave(false);\r\n    }\r\n  }, [shouldSave]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormObject({ ...formObject, [name]: value });\r\n  };\r\n\r\n  const addAnswerToDb = () => {\r\n    API.postAnswer(formObject)\r\n      .then((res) => {\r\n        props.setAnswers([...props.answers, res.data]);\r\n        setFormObject(defaultInput);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFormObject({\r\n      ...formObject,\r\n      likes: 0,\r\n      dislikes: 0,\r\n      questionId: props.question.id,\r\n    });\r\n    setShouldSave(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label className=\"title\">Your Answer</Form.Label>\r\n          <Form.Text className=\"text-muted\">\r\n            To add code blocks, wrap your code in 3 backticks like following\r\n            example : ```location.pathname```\r\n          </Form.Text>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"6\"\r\n            name=\"body\"\r\n            value={formObject.body}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <Button\r\n        variant=\"outline-info\"\r\n        className=\"post-question\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Post Answer\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\nexport default Answer;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AiOutlineLike } from \"react-icons/ai\";\r\nimport { AiOutlineDislike } from \"react-icons/ai\";\r\nimport * as moment from \"moment\";\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\nimport PostAnswer from \"../PostAnswer\";\r\nimport Highlight from \"react-highlight.js\";\r\n\r\nconst Question = () => {\r\n  const [answers, setAnswers] = useState([]);\r\n  const [question, setQuestion] = useState({});\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    let questionID = location.pathname.split(\"/\")[2];\r\n    findQuestionData(questionID);\r\n  }, []);\r\n\r\n  const getContent = (body) => {\r\n    if (!body) {\r\n      return;\r\n    }\r\n    let content = [];\r\n    let codeIndices = getIndicesOf(\"```\", body);\r\n    if (codeIndices.length > 0) {\r\n      for (let i = 0; i < codeIndices.length; i = i + 2) {\r\n        if (codeIndices[i] === 0 || i !== 0) {\r\n          // console.log(\"if\", i, codeIndices[i], codeIndices[i + 1], codeIndices[i + 2]);\r\n          content.push(\r\n            <Highlight>\r\n              {body.substring(codeIndices[i] + 3, codeIndices[i + 1])}\r\n            </Highlight>\r\n          );\r\n          let text = body.substring(codeIndices[i + 1] + 3, codeIndices[i + 2]);\r\n          content.push(generateBody(text));\r\n        } else {\r\n          // console.log(\"else\", i, codeIndices[i], codeIndices[i + 1], codeIndices[i + 2]);\r\n          let text = body.substring(0, codeIndices[i]);\r\n          content.push(generateBody(text));\r\n          content.push(\r\n            <Highlight>\r\n              {body.substring(codeIndices[i] + 3, codeIndices[i + 1])}\r\n            </Highlight>\r\n          );\r\n          text = body.substring(codeIndices[i + 1] + 3, codeIndices[i + 2]);\r\n          content.push(generateBody(text));\r\n        }\r\n      }\r\n    } else {\r\n      content.push(<p>{body}</p>);\r\n    }\r\n    return content;\r\n  };\r\n\r\n  const generateBody = (text) => {\r\n    let linkIndices = [];\r\n    let content = [];\r\n    let links = text.match(\r\n      /(\\b(https?):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi\r\n    );\r\n\r\n    if (links) {\r\n      links.forEach((link) => {\r\n        linkIndices.push(text.indexOf(link));\r\n      });\r\n      console.log(linkIndices);\r\n      linkIndices.forEach((linkIndex, j) => {\r\n        console.log(text[0]);\r\n        if (linkIndex === 0 || j !== 0) {\r\n          let firstText = text.substring(\r\n            linkIndex + links[j].length,\r\n            linkIndices[j + 1]\r\n          );\r\n          let firstLink = text.substring(\r\n            linkIndex,\r\n            linkIndex + links[j].length\r\n          );\r\n          content.push(\r\n            <a href={firstLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {firstLink}\r\n            </a>\r\n          );\r\n          content.push(<p>{firstText}</p>);\r\n        } else {\r\n          let firstText = text.substring(0, linkIndex);\r\n          let firstLink = text.substring(\r\n            linkIndex,\r\n            linkIndex + links[j].length\r\n          );\r\n          let secondText = text.substring(\r\n            linkIndex + links[j].length,\r\n            linkIndices[j + 1]\r\n          );\r\n          content.push(<p>{firstText}</p>);\r\n          content.push(\r\n            <a href={firstLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {firstLink}\r\n            </a>\r\n          );\r\n          content.push(<p>{secondText}</p>);\r\n        }\r\n      });\r\n    } else {\r\n      content.push(<p>{text}</p>);\r\n    }\r\n    return content;\r\n  };\r\n\r\n  // get codeIndices of all code occurrences\r\n  const getIndicesOf = (searchStr, str) => {\r\n    let searchStrLen = searchStr.length;\r\n    if (searchStrLen == 0) {\r\n      return [];\r\n    }\r\n    let startIndex = 0,\r\n      index,\r\n      codeIndices = [];\r\n\r\n    while ((index = str.indexOf(searchStr, startIndex)) > -1) {\r\n      codeIndices.push(index);\r\n      startIndex = index + searchStrLen;\r\n    }\r\n    return codeIndices;\r\n  };\r\n\r\n  const findQuestionData = (id) => {\r\n    API.findQuestion(id)\r\n      .then((res) => {\r\n        res.data.views += 1;\r\n        API.updateQuestion(res.data)\r\n          .then(() => {\r\n            setQuestion(res.data);\r\n            showAnswers(res.data.id);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const updateQuestion = (name) => {\r\n    const questionDataCopy = { ...question };\r\n    questionDataCopy[name] += 1;\r\n    API.updateQuestion(questionDataCopy)\r\n      .then(() => {\r\n        setQuestion(questionDataCopy);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const updateAnswerLikesCount = (name, id) => {\r\n    const answersDataCopy = [...answers];\r\n    const answer = answersDataCopy.find((answer) => answer.id === id);\r\n    answer[name] += 1;\r\n    API.updateAnswerLikesQty(answer)\r\n      .then(() => {\r\n        setAnswers(answersDataCopy);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const showAnswers = (id) => {\r\n    API.getAllAnswers()\r\n      .then((res) => {\r\n        const newAnswers = [];\r\n        res.data.forEach((answer) => {\r\n          if (answer.questionId === id) {\r\n            newAnswers.push(answer);\r\n          }\r\n        });\r\n        setAnswers(newAnswers);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 offset-sm-2 col-sm-12\">\r\n            <br></br>\r\n\r\n            <h2>{question.title}</h2>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-1 likes\">\r\n                <AiOutlineLike\r\n                  className=\"likes-icon\"\r\n                  onClick={() => updateQuestion(\"likes\")}\r\n                />\r\n                {question.likes}\r\n              </div>\r\n              <div className=\"col-md-2 likes\">\r\n                <AiOutlineDislike\r\n                  className=\"likes-icon\"\r\n                  onClick={() => updateQuestion(\"dislikes\")}\r\n                />\r\n                {question.dislikes}\r\n              </div>\r\n              <div className=\"col-md-4 col-sm-12 asked\">\r\n                asked: {moment(question.createdAt).fromNow()}\r\n              </div>\r\n              <div className=\"col-md-2\">views: {question.views}</div>\r\n            </div>\r\n            <hr></hr>\r\n            <br></br>\r\n            {getContent(question.body)}\r\n            <hr></hr>\r\n            <br></br>\r\n            {answers.map((answer) => {\r\n              return (\r\n                <div key={answer.id}>\r\n                  <div className=\"answer\">Answer:</div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-1 likes\">\r\n                      <AiOutlineLike\r\n                        className=\"likes-icon\"\r\n                        onClick={() =>\r\n                          updateAnswerLikesCount(\"likes\", answer.id)\r\n                        }\r\n                      />\r\n                      {answer.likes}\r\n                    </div>\r\n                    <div className=\"col-md-2 likes\">\r\n                      <AiOutlineDislike\r\n                        className=\"likes-icon\"\r\n                        onClick={() =>\r\n                          updateAnswerLikesCount(\"dislikes\", answer.id)\r\n                        }\r\n                      />\r\n                      {answer.dislikes}\r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-12 asked\">\r\n                      answered: {moment(answer.createdAt).fromNow()}\r\n                    </div>\r\n                  </div>\r\n                  <hr></hr>\r\n                  {getContent(answer.body)}\r\n                  <hr></hr>\r\n                </div>\r\n              );\r\n            })}\r\n            <PostAnswer\r\n              question={question}\r\n              answers={answers}\r\n              setAnswers={setAnswers}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Question;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/homePage\";\nimport Navbar from \"./components/Navbar\";\nimport PostQuestion from \"./components/PostQuestion\";\nimport DisplaySingleQuestion from \"./components/DisplaySingleQuestion\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  return (\n    <div>\n      <Router>\n        <Navbar search={search} setSearch={setSearch} />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage search={search} setSearch={setSearch} />\n          </Route>\n          <Route exact path=\"/post-question\">\n            <PostQuestion />\n          </Route>\n          <Route exact path=\"/display-single-question/:id\">\n            <DisplaySingleQuestion />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}